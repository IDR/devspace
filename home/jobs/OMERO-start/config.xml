<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># PURGE
eval $(bash /opt/multi-config.sh ice3.4)
DEPLOY=$(find . -maxdepth 1 -type d -name &quot;openmicroscopy*&quot;)/dist
$DEPLOY/bin/omero admin stop --force-rewrite || echo First build
sleep 5
rm -rf openmicroscopy*</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.35.2">
      <project>OMERO-build</project>
      <filter>src/target/openmicroscopy*zip</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command># FUTURE ENV. VARS
OMERO_DATA_DIR=$WORKSPACE/data
OMERO_DB_NAME=$JOB_NAME

export LANG=en_US.UTF-8
export LANGUAGE=en_US.en
export LC_ALL=en_US.UTF-8


ZIP=$(ls openmicroscopy*zip)
SRC=$WORKSPACE/${ZIP%.zip}
unzip $ZIP


eval $(bash /opt/multi-config.sh ice3.4)
cd $SRC
source docs/hudson/functions.sh
./build.py build-schema build-default test-compile


# PURGE
dist/bin/omero admin stop --force-rewrite || echo First build
sleep 5

mkdir -p $OMERO_DATA_DIR
rm -rf $OMERO_DATA_DIR/*
dropdb -h pg -U postgres $OMERO_DB_NAME || echo Already exists maybe
createdb -h pg -U postgres $OMERO_DB_NAME

cd dist

# CONFIG HERE.
bin/omero config set omero.db.name $OMERO_DB_NAME
bin/omero config set omero.db.host pg
bin/omero config set omero.db.user postgres
bin/omero config set omero.data.dir $OMERO_DATA_DIR

bin/omero config set omero.web.check_version false
bin/omero config set omero.web.application_server.host 0.0.0.0
bin/omero config set omero.web.server_list &apos;[[&quot;localhost&quot;, 4064, &quot;regions&quot;],[&quot;dogfish.openmicroscopy.org&quot;, 4064, &quot;dogfish&quot;]]&apos;
# DONE


# PURGE
bin/omero db script -f dbsetup.sql &quot;&quot; &quot;&quot; omero
psql -h pg -U postgres -d $OMERO_DB_NAME -f dbsetup.sql
rm dbsetup.sql

pip install --user -U pip
export PATH=$HOME/.local/bin/:$PATH # `pip` and `gunicorn`
pip install --user -r share/web/requirements-py26-nginx.txt

BUILD_ID=DONT_KILL_ME bin/omero admin start
BUILD_ID=DONT_KILL_ME bin/omero web start

bin/omero admin waitup

export OMERO_SESSION_DIR=/tmp/$JOB_NAME/$BUILD_NUMBER
export ICE_CONFIG=$SRC/dist/etc/ice.config
echo Running the integration tests with -Dtestng.useDefaultListeners=true
cd $SRC
./build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/integration integration
./build.py -f components/tools/OmeroPy/build.xml integration  -Dtestreports.dir=target/reports/integration
./build.py -f components/tools/OmeroFS/build.xml integration -Dtestreports.dir=target/reports/integration
./build.py -f components/tools/OmeroWeb/build.xml integration -Dtestreports.dir=target/reports/integration

## Broken
./build.py -f components/tools/OmeroPy/build.xml integration -DMARK=broken -Dtestreports.dir=target/reports/broken
./build.py -f components/tools/OmeroJava/build.xml -Dtestng.useDefaultListeners=true -Dtestreports.dir=target/reports/broken broken</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.5">
      <testResults>**/target/reports/integration/**/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers/>
</project>
